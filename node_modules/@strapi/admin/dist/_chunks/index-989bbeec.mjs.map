{"version":3,"file":"index-989bbeec.mjs","sources":["../../admin/src/pages/SettingsPage/pages/ApiTokens/ListView/utils/tableHeaders.js","../../admin/src/pages/SettingsPage/pages/ApiTokens/ListView/index.js","../../admin/src/pages/SettingsPage/pages/ApiTokens/ProtectedListView/index.js"],"sourcesContent":["const tableHeaders = [\n  {\n    name: 'name',\n    key: 'name',\n    metadatas: {\n      label: {\n        id: 'Settings.apiTokens.ListView.headers.name',\n        defaultMessage: 'Name',\n      },\n      sortable: true,\n    },\n  },\n  {\n    name: 'description',\n    key: 'description',\n    metadatas: {\n      label: {\n        id: 'Settings.apiTokens.ListView.headers.description',\n        defaultMessage: 'Description',\n      },\n      sortable: false,\n    },\n  },\n  {\n    name: 'createdAt',\n    key: 'createdAt',\n    metadatas: {\n      label: {\n        id: 'Settings.apiTokens.ListView.headers.createdAt',\n        defaultMessage: 'Created at',\n      },\n      sortable: false,\n    },\n  },\n  {\n    name: 'lastUsedAt',\n    key: 'lastUsedAt',\n    metadatas: {\n      label: {\n        id: 'Settings.apiTokens.ListView.headers.lastUsedAt',\n        defaultMessage: 'Last used',\n      },\n      sortable: false,\n    },\n  },\n];\n\nexport default tableHeaders;\n","import * as React from 'react';\n\nimport { ContentLayout, HeaderLayout, Main } from '@strapi/design-system';\nimport {\n  LinkButton,\n  NoContent,\n  NoPermissions,\n  SettingsPageTitle,\n  useAPIErrorHandler,\n  useFetchClient,\n  useFocusWhenNavigate,\n  useGuidedTour,\n  useNotification,\n  useRBAC,\n  useTracking,\n} from '@strapi/helper-plugin';\nimport { Plus } from '@strapi/icons';\nimport qs from 'qs';\nimport { useIntl } from 'react-intl';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport { useSelector } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nimport { selectAdminPermissions } from '../../../../../selectors';\nimport { API_TOKEN_TYPE } from '../../../components/Tokens/constants';\nimport Table from '../../../components/Tokens/Table';\n\nimport tableHeaders from './utils/tableHeaders';\n\nconst ApiTokenListView = () => {\n  useFocusWhenNavigate();\n  const queryClient = useQueryClient();\n  const { formatMessage } = useIntl();\n  const toggleNotification = useNotification();\n  const permissions = useSelector(selectAdminPermissions);\n  const {\n    allowedActions: { canCreate, canDelete, canUpdate, canRead },\n  } = useRBAC(permissions.settings['api-tokens']);\n  const { push } = useHistory();\n  const { trackUsage } = useTracking();\n  const { startSection } = useGuidedTour();\n  const startSectionRef = React.useRef(startSection);\n  const { get, del } = useFetchClient();\n  const { formatAPIError } = useAPIErrorHandler();\n\n  React.useEffect(() => {\n    if (startSectionRef.current) {\n      startSectionRef.current('apiTokens');\n    }\n  }, []);\n\n  React.useEffect(() => {\n    push({ search: qs.stringify({ sort: 'name:ASC' }, { encode: false }) });\n  }, [push]);\n\n  const headers = tableHeaders.map((header) => ({\n    ...header,\n    metadatas: {\n      ...header.metadatas,\n      label: formatMessage(header.metadatas.label),\n    },\n  }));\n\n  const { data: apiTokens, isLoading: isLoadingTokens } = useQuery(\n    ['api-tokens'],\n    async () => {\n      trackUsage('willAccessTokenList', {\n        tokenType: API_TOKEN_TYPE,\n      });\n\n      const {\n        data: { data },\n      } = await get(`/admin/api-tokens`);\n\n      trackUsage('didAccessTokenList', { number: data.length, tokenType: API_TOKEN_TYPE });\n\n      return data;\n    },\n    {\n      cacheTime: 0,\n      enabled: canRead,\n      onError(error) {\n        toggleNotification({\n          type: 'warning',\n          message: formatAPIError(error),\n        });\n      },\n    }\n  );\n\n  const isLoading = isLoadingTokens;\n\n  const deleteMutation = useMutation(\n    async (id) => {\n      await del(`/admin/api-tokens/${id}`);\n    },\n    {\n      async onSuccess() {\n        await queryClient.invalidateQueries(['api-tokens']);\n        trackUsage('didDeleteToken');\n      },\n      onError(error) {\n        toggleNotification({ type: 'warning', message: formatAPIError(error) });\n      },\n    }\n  );\n\n  const hasApiTokens = apiTokens && apiTokens.length > 0;\n  const shouldDisplayDynamicTable = canRead && hasApiTokens;\n  const shouldDisplayNoContent = canRead && !hasApiTokens && !canCreate;\n  const shouldDisplayNoContentWithCreationButton = canRead && !hasApiTokens && canCreate;\n\n  return (\n    <Main aria-busy={isLoading}>\n      {/* TODO: this needs to be translated */}\n      <SettingsPageTitle name=\"API Tokens\" />\n      <HeaderLayout\n        title={formatMessage({ id: 'Settings.apiTokens.title', defaultMessage: 'API Tokens' })}\n        subtitle={formatMessage({\n          id: 'Settings.apiTokens.description',\n          defaultMessage: 'List of generated tokens to consume the API',\n        })}\n        primaryAction={\n          canCreate && (\n            <LinkButton\n              data-testid=\"create-api-token-button\"\n              startIcon={<Plus />}\n              size=\"S\"\n              onClick={() =>\n                trackUsage('willAddTokenFromList', {\n                  tokenType: API_TOKEN_TYPE,\n                })\n              }\n              to=\"/settings/api-tokens/create\"\n            >\n              {formatMessage({\n                id: 'Settings.apiTokens.create',\n                defaultMessage: 'Create new API Token',\n              })}\n            </LinkButton>\n          )\n        }\n      />\n      <ContentLayout>\n        {!canRead && <NoPermissions />}\n        {shouldDisplayDynamicTable && (\n          <Table\n            permissions={{ canRead, canDelete, canUpdate }}\n            headers={headers}\n            contentType=\"api-tokens\"\n            rows={apiTokens}\n            isLoading={isLoading}\n            onConfirmDelete={(id) => deleteMutation.mutateAsync(id)}\n            tokens={apiTokens}\n            tokenType={API_TOKEN_TYPE}\n          />\n        )}\n        {shouldDisplayNoContentWithCreationButton && (\n          <NoContent\n            content={{\n              id: 'Settings.apiTokens.addFirstToken',\n              defaultMessage: 'Add your first API Token',\n            }}\n            action={\n              <LinkButton variant=\"secondary\" startIcon={<Plus />} to=\"/settings/api-tokens/create\">\n                {formatMessage({\n                  id: 'Settings.apiTokens.addNewToken',\n                  defaultMessage: 'Add new API Token',\n                })}\n              </LinkButton>\n            }\n          />\n        )}\n        {shouldDisplayNoContent && (\n          <NoContent\n            content={{\n              id: 'Settings.apiTokens.emptyStateLayout',\n              defaultMessage: 'You donâ€™t have any content yet...',\n            }}\n          />\n        )}\n      </ContentLayout>\n    </Main>\n  );\n};\n\nexport default ApiTokenListView;\n","import React from 'react';\n\nimport { CheckPagePermissions } from '@strapi/helper-plugin';\nimport { useSelector } from 'react-redux';\n\nimport { selectAdminPermissions } from '../../../../../selectors';\nimport ListView from '../ListView';\n\nconst ProtectedApiTokenListView = () => {\n  const permissions = useSelector(selectAdminPermissions);\n\n  return (\n    <CheckPagePermissions permissions={permissions.settings['api-tokens'].main}>\n      <ListView />\n    </CheckPagePermissions>\n  );\n};\n\nexport default ProtectedApiTokenListView;\n"],"names":["qs","ListView"],"mappings":"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"}