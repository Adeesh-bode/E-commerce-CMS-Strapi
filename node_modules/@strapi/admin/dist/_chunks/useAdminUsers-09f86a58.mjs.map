{"version":3,"file":"useAdminUsers-09f86a58.mjs","sources":["../../admin/src/hooks/useAdminUsers.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { useFetchClient } from '@strapi/helper-plugin';\nimport { useQuery } from 'react-query';\n\nimport * as Users from '../../../shared/contracts/user';\n\nexport type APIUsersQueryParams =\n  | Users.FindOne.Params\n  | (Users.FindAll.Request['query'] & { id?: never });\n\nexport function useAdminUsers(params: APIUsersQueryParams = {}, queryOptions = {}) {\n  const { id = '', ...queryParams } = params;\n\n  const { get } = useFetchClient();\n\n  const { data, isError, isLoading, refetch } = useQuery(\n    ['users', id, queryParams],\n    async () => {\n      const {\n        data: { data },\n      } = await get<Users.FindAll.Response | Users.FindOne.Response>(`/admin/users/${id}`, {\n        params: queryParams,\n      });\n\n      return data;\n    },\n    queryOptions\n  );\n\n  // the return value needs to be memoized, because intantiating\n  // an empty array as default value would lead to an unstable return\n  // value, which later on triggers infinite loops if used in the\n  // dependency arrays of other hooks\n  const users = React.useMemo(() => {\n    let users: Users.FindAll.Response['data']['results'] = [];\n\n    if (data) {\n      if ('results' in data) {\n        if (Array.isArray(data.results)) {\n          users = data.results;\n        }\n      } else {\n        users = [data];\n      }\n    }\n\n    return users;\n  }, [data]);\n\n  return {\n    users,\n    pagination: React.useMemo(() => (data && 'pagination' in data) ?? null, [data]),\n    isLoading,\n    isError,\n    refetch,\n  };\n}\n"],"names":["data","users"],"mappings":";;;AAWO,SAAS,cAAc,SAA8B,IAAI,eAAe,CAAA,GAAI;AACjF,QAAM,EAAE,KAAK,IAAI,GAAG,gBAAgB;AAE9B,QAAA,EAAE,QAAQ;AAEhB,QAAM,EAAE,MAAM,SAAS,WAAW,QAAY,IAAA;AAAA,IAC5C,CAAC,SAAS,IAAI,WAAW;AAAA,IACzB,YAAY;AACJ,YAAA;AAAA,QACJ,MAAM,EAAE,MAAAA,MAAK;AAAA,MACX,IAAA,MAAM,IAAqD,gBAAgB,EAAE,IAAI;AAAA,QACnF,QAAQ;AAAA,MAAA,CACT;AAEMA,aAAAA;AAAAA,IACT;AAAA,IACA;AAAA,EAAA;AAOI,QAAA,QAAQ,MAAM,QAAQ,MAAM;AAChC,QAAIC,SAAmD,CAAA;AAEvD,QAAI,MAAM;AACR,UAAI,aAAa,MAAM;AACrB,YAAI,MAAM,QAAQ,KAAK,OAAO,GAAG;AAC/BA,mBAAQ,KAAK;AAAA,QACf;AAAA,MAAA,OACK;AACLA,iBAAQ,CAAC,IAAI;AAAA,MACf;AAAA,IACF;AAEOA,WAAAA;AAAAA,EAAA,GACN,CAAC,IAAI,CAAC;AAEF,SAAA;AAAA,IACL;AAAA,IACA,YAAY,MAAM,QAAQ,OAAO,QAAQ,gBAAgB,SAAS,MAAM,CAAC,IAAI,CAAC;AAAA,IAC9E;AAAA,IACA;AAAA,IACA;AAAA,EAAA;AAEJ;"}