{"version":3,"file":"index-115d317b.mjs","sources":["../../admin/src/pages/SettingsPage/pages/Roles/CreatePage/utils/schema.js","../../admin/src/pages/SettingsPage/pages/Roles/CreatePage/index.js"],"sourcesContent":["import { translatedErrors } from '@strapi/helper-plugin';\nimport * as yup from 'yup';\n\nconst schema = yup.object().shape({\n  name: yup.string().required(translatedErrors.required),\n  description: yup.string().required(translatedErrors.required),\n});\n\nexport default schema;\n","import React, { useRef, useState } from 'react';\n\nimport {\n  Box,\n  Button,\n  ContentLayout,\n  Flex,\n  Grid,\n  GridItem,\n  HeaderLayout,\n  Main,\n  Textarea,\n  TextInput,\n  Typography,\n} from '@strapi/design-system';\nimport {\n  CheckPagePermissions,\n  Form,\n  Link,\n  LoadingIndicatorPage,\n  SettingsPageTitle,\n  useFetchClient,\n  useNotification,\n  useOverlayBlocker,\n  useTracking,\n} from '@strapi/helper-plugin';\nimport { ArrowLeft } from '@strapi/icons';\nimport { format } from 'date-fns';\nimport { Formik } from 'formik';\nimport isEmpty from 'lodash/isEmpty';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { selectAdminPermissions } from '../../../../../selectors';\nimport Permissions from '../EditPage/components/Permissions';\nimport { useAdminRolePermissionLayout } from '../hooks/useAdminRolePermissionLayout';\nimport { useAdminRolePermissions } from '../hooks/useAdminRolePermissions';\n\nimport schema from './utils/schema';\n\nconst UsersRoleNumber = styled.div`\n  border: 1px solid ${({ theme }) => theme.colors.primary200};\n  background: ${({ theme }) => theme.colors.primary100};\n  padding: ${({ theme }) => `${theme.spaces[2]} ${theme.spaces[4]}`};\n  color: ${({ theme }) => theme.colors.primary600};\n  border-radius: ${({ theme }) => theme.borderRadius};\n  font-size: ${12 / 16}rem;\n  font-weight: bold;\n`;\n\nconst CreatePage = () => {\n  const route = useRouteMatch('/settings/roles/duplicate/:id');\n  const toggleNotification = useNotification();\n  const { lockApp, unlockApp } = useOverlayBlocker();\n  const { formatMessage } = useIntl();\n  const [isSubmitting, setIsSubmiting] = useState(false);\n  const { replace } = useHistory();\n  const permissionsRef = useRef();\n  const { trackUsage } = useTracking();\n  const { post, put } = useFetchClient();\n\n  const { params } = route ?? {};\n\n  const { isLoading: isLoadingPermissionsLayout, data: permissionsLayout } =\n    useAdminRolePermissionLayout(params?.id, {\n      cacheTime: 0,\n    });\n\n  const { permissions: rolePermissions, isLoading: isLoadingRole } = useAdminRolePermissions(\n    { id: params?.id },\n    {\n      cacheTime: 0,\n\n      // only fetch permissions if a role is cloned\n      enabled: !!params?.id,\n    }\n  );\n\n  const handleCreateRoleSubmit = (data) => {\n    lockApp();\n    setIsSubmiting(true);\n\n    if (params?.id) {\n      trackUsage('willDuplicateRole');\n    } else {\n      trackUsage('willCreateNewRole');\n    }\n\n    Promise.resolve(post('/admin/roles', data))\n      .then(async ({ data: res }) => {\n        const { permissionsToSend } = permissionsRef.current.getPermissions();\n\n        if (params?.id) {\n          trackUsage('didDuplicateRole');\n        } else {\n          trackUsage('didCreateNewRole');\n        }\n\n        if (res.data.id && !isEmpty(permissionsToSend)) {\n          await put(`/admin/roles/${res.data.id}/permissions`, { permissions: permissionsToSend });\n        }\n\n        return res;\n      })\n      .then((res) => {\n        setIsSubmiting(false);\n        toggleNotification({\n          type: 'success',\n          message: { id: 'Settings.roles.created', defaultMessage: 'created' },\n        });\n        replace(`/settings/roles/${res.data.id}`);\n      })\n      .catch((err) => {\n        console.error(err);\n        setIsSubmiting(false);\n        toggleNotification({\n          type: 'warning',\n          message: { id: 'notification.error' },\n        });\n      })\n      .finally(() => {\n        unlockApp();\n      });\n  };\n\n  const defaultDescription = `${formatMessage({\n    id: 'Settings.roles.form.created',\n    defaultMessage: 'Created',\n  })} ${format(new Date(), 'PPP')}`;\n\n  return (\n    <Main>\n      <SettingsPageTitle name=\"Roles\" />\n      <Formik\n        initialValues={{ name: '', description: defaultDescription }}\n        onSubmit={handleCreateRoleSubmit}\n        validationSchema={schema}\n        validateOnChange={false}\n      >\n        {({ handleSubmit, values, errors, handleReset, handleChange }) => (\n          <Form noValidate>\n            <>\n              <HeaderLayout\n                primaryAction={\n                  <Flex gap={2}>\n                    <Button\n                      variant=\"secondary\"\n                      onClick={() => {\n                        handleReset();\n                        permissionsRef.current.resetForm();\n                      }}\n                      size=\"L\"\n                    >\n                      {formatMessage({\n                        id: 'app.components.Button.reset',\n                        defaultMessage: 'Reset',\n                      })}\n                    </Button>\n                    <Button onClick={handleSubmit} loading={isSubmitting} size=\"L\">\n                      {formatMessage({\n                        id: 'global.save',\n                        defaultMessage: 'Save',\n                      })}\n                    </Button>\n                  </Flex>\n                }\n                title={formatMessage({\n                  id: 'Settings.roles.create.title',\n                  defaultMessage: 'Create a role',\n                })}\n                subtitle={formatMessage({\n                  id: 'Settings.roles.create.description',\n                  defaultMessage: 'Define the rights given to the role',\n                })}\n                navigationAction={\n                  <Link startIcon={<ArrowLeft />} to=\"/settings/roles\">\n                    {formatMessage({\n                      id: 'global.back',\n                      defaultMessage: 'Back',\n                    })}\n                  </Link>\n                }\n              />\n              <ContentLayout>\n                <Flex direction=\"column\" alignItems=\"stretch\" gap={6}>\n                  <Box background=\"neutral0\" padding={6} shadow=\"filterShadow\" hasRadius>\n                    <Flex direction=\"column\" alignItems=\"stretch\" gap={4}>\n                      <Flex justifyContent=\"space-between\">\n                        <Box>\n                          <Box>\n                            <Typography fontWeight=\"bold\">\n                              {formatMessage({\n                                id: 'global.details',\n                                defaultMessage: 'Details',\n                              })}\n                            </Typography>\n                          </Box>\n                          <Box>\n                            <Typography variant=\"pi\" textColor=\"neutral600\">\n                              {formatMessage({\n                                id: 'Settings.roles.form.description',\n                                defaultMessage: 'Name and description of the role',\n                              })}\n                            </Typography>\n                          </Box>\n                        </Box>\n                        <UsersRoleNumber>\n                          {formatMessage(\n                            {\n                              id: 'Settings.roles.form.button.users-with-role',\n                              defaultMessage:\n                                '{number, plural, =0 {# users} one {# user} other {# users}} with this role',\n                            },\n                            { number: 0 }\n                          )}\n                        </UsersRoleNumber>\n                      </Flex>\n                      <Grid gap={4}>\n                        <GridItem col={6}>\n                          <TextInput\n                            name=\"name\"\n                            error={errors.name && formatMessage({ id: errors.name })}\n                            label={formatMessage({\n                              id: 'global.name',\n                              defaultMessage: 'Name',\n                            })}\n                            onChange={handleChange}\n                            required\n                            value={values.name}\n                          />\n                        </GridItem>\n                        <GridItem col={6}>\n                          <Textarea\n                            label={formatMessage({\n                              id: 'global.description',\n                              defaultMessage: 'Description',\n                            })}\n                            id=\"description\"\n                            error={errors.description && formatMessage({ id: errors.description })}\n                            onChange={handleChange}\n                          >\n                            {values.description}\n                          </Textarea>\n                        </GridItem>\n                      </Grid>\n                    </Flex>\n                  </Box>\n                  {!isLoadingPermissionsLayout && !isLoadingRole ? (\n                    <Box shadow=\"filterShadow\" hasRadius>\n                      <Permissions\n                        isFormDisabled={false}\n                        ref={permissionsRef}\n                        permissions={rolePermissions}\n                        layout={permissionsLayout}\n                      />\n                    </Box>\n                  ) : (\n                    <Box background=\"neutral0\" padding={6} shadow=\"filterShadow\" hasRadius>\n                      <LoadingIndicatorPage />\n                    </Box>\n                  )}\n                </Flex>\n              </ContentLayout>\n            </>\n          </Form>\n        )}\n      </Formik>\n    </Main>\n  );\n};\n\nexport default function () {\n  const permissions = useSelector(selectAdminPermissions);\n\n  return (\n    <CheckPagePermissions permissions={permissions.settings.roles.create}>\n      <CreatePage />\n    </CheckPagePermissions>\n  );\n}\n\nexport { CreatePage };\n"],"names":[],"mappings":"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"}