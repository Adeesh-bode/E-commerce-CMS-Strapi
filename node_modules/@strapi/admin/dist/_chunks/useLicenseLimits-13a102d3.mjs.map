{"version":3,"file":"useLicenseLimits-13a102d3.mjs","sources":["../../ee/admin/src/hooks/useLicenseLimits.js"],"sourcesContent":["import * as React from 'react';\n\nimport { useFetchClient } from '@strapi/helper-plugin';\nimport { useQuery } from 'react-query';\n\nexport function useLicenseLimits({ enabled } = { enabled: true }) {\n  const { get } = useFetchClient();\n  const { data, isError, isLoading } = useQuery(\n    ['ee', 'license-limit-info'],\n    async () => {\n      const {\n        data: { data },\n      } = await get('/admin/license-limit-information');\n\n      return data;\n    },\n    {\n      enabled,\n    }\n  );\n\n  // this needs memoization, because a default value of `{}`\n  // would lead to infinite rendering loops, when used as\n  // effect dependency\n  const license = React.useMemo(() => data ?? {}, [data]);\n\n  const getFeature = React.useCallback(\n    (name) => {\n      const feature = (license?.features ?? []).find((feature) => feature.name === name);\n\n      return feature?.options ?? {};\n    },\n    [license?.features]\n  );\n\n  return { license, getFeature, isError, isLoading };\n}\n"],"names":["data","feature"],"mappings":";;;AAKO,SAAS,iBAAiB,EAAE,QAAA,IAAY,EAAE,SAAS,QAAQ;AAC1D,QAAA,EAAE,QAAQ;AAChB,QAAM,EAAE,MAAM,SAAS,UAAc,IAAA;AAAA,IACnC,CAAC,MAAM,oBAAoB;AAAA,IAC3B,YAAY;AACJ,YAAA;AAAA,QACJ,MAAM,EAAE,MAAAA,MAAK;AAAA,MAAA,IACX,MAAM,IAAI,kCAAkC;AAEzCA,aAAAA;AAAAA,IACT;AAAA,IACA;AAAA,MACE;AAAA,IACF;AAAA,EAAA;AAMI,QAAA,UAAU,MAAM,QAAQ,MAAM,QAAQ,IAAI,CAAC,IAAI,CAAC;AAEtD,QAAM,aAAa,MAAM;AAAA,IACvB,CAAC,SAAS;AACF,YAAA,WAAW,SAAS,YAAY,CAAC,GAAG,KAAK,CAACC,aAAYA,SAAQ,SAAS,IAAI;AAE1E,aAAA,SAAS,WAAW;IAC7B;AAAA,IACA,CAAC,SAAS,QAAQ;AAAA,EAAA;AAGpB,SAAO,EAAE,SAAS,YAAY,SAAS,UAAU;AACnD;"}