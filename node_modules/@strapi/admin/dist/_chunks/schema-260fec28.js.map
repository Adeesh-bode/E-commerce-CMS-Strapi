{"version":3,"file":"schema-260fec28.js","sources":["../../admin/src/content-manager/utils/getTrad.js","../../admin/src/content-manager/contexts/Wysiwyg.js","../../admin/src/content-manager/hooks/useKeyboardDragAndDrop.js","../../admin/src/content-manager/hooks/useDragAndDrop.js","../../admin/src/content-manager/pages/App/selectors.js","../../admin/src/content-manager/utils/composeRefs.js","../../admin/src/content-manager/utils/isFieldTypeNumber.js","../../admin/src/content-manager/utils/schema.js"],"sourcesContent":["const getTrad = (id) => `content-manager.${id}`;\n\nexport default getTrad;\n","import { createContext } from 'react';\n\nconst WysiwygContext = createContext();\n\nexport default WysiwygContext;\n","import { useState } from 'react';\n\n/**\n * @typedef UseKeyboardDragAndDropCallbacks\n *\n * @type {{\n *  onCancel?: (index: number) => void,\n *  onDropItem?: (index: number) => void,\n *  onGrabItem?: (index: number) => void,\n *  onMoveItem: (newIndex: number, currentIndex: number) => void,\n * }}\n */\n\n/**\n * Utility hook designed to implement keyboard accessibile drag and drop by\n * returning an onKeyDown handler to be passed to the drag icon button.\n *\n * @internal - You should use `useDragAndDrop` instead.\n *\n * @type {(active: boolean, index: number, callbacks: UseKeyboardDragAndDropCallbacks) => (event: React.KeyboardEvent<HTMLButtonElement>) => void}\n */\nexport const useKeyboardDragAndDrop = (\n  active,\n  index,\n  { onCancel, onDropItem, onGrabItem, onMoveItem }\n) => {\n  const [isSelected, setIsSelected] = useState(false);\n  /**\n   * @type {(movement: 'UP' | 'DOWN') => void})}\n   */\n  const handleMove = (movement) => {\n    if (!isSelected) {\n      return;\n    }\n\n    if (movement === 'UP') {\n      onMoveItem(index - 1, index);\n    } else if (movement === 'DOWN') {\n      onMoveItem(index + 1, index);\n    }\n  };\n\n  const handleDragClick = () => {\n    if (isSelected) {\n      if (onDropItem) {\n        onDropItem(index);\n      }\n      setIsSelected(false);\n    } else {\n      if (onGrabItem) {\n        onGrabItem(index);\n      }\n      setIsSelected(true);\n    }\n  };\n\n  const handleCancel = () => {\n    if (isSelected) {\n      setIsSelected(false);\n\n      if (onCancel) {\n        onCancel(index);\n      }\n    }\n  };\n\n  /**\n   * @type {React.KeyboardEventHandler<HTMLButtonElement>}\n   */\n  const handleKeyDown = (e) => {\n    if (!active) {\n      return;\n    }\n\n    if (e.key === 'Tab' && !isSelected) {\n      return;\n    }\n\n    e.preventDefault();\n\n    switch (e.key) {\n      case ' ':\n      case 'Enter':\n        handleDragClick();\n        break;\n\n      case 'Escape':\n        handleCancel();\n        break;\n\n      case 'ArrowDown':\n      case 'ArrowRight':\n        handleMove('DOWN');\n        break;\n\n      case 'ArrowUp':\n      case 'ArrowLeft':\n        handleMove('UP');\n        break;\n\n      default:\n    }\n  };\n\n  return handleKeyDown;\n};\n","import { useRef } from 'react';\n\nimport { useDrag, useDrop } from 'react-dnd';\n\nimport { useKeyboardDragAndDrop } from './useKeyboardDragAndDrop';\n\n/**\n * @typedef UseDragAndDropOptions\n *\n * @type {{\n *  type?: string,\n *  index: number,\n *  item?: object,\n *  onStart?: () => void,\n *  onEnd?: () => void,\n *  dropSensitivity?: 'regular' | 'immediate'\n * } & import('./useKeyboardDragAndDrop').UseKeyboardDragAndDropCallbacks}\n */\n\n/**\n * @typedef UseDragAndDropReturn\n *\n * @type {[props: {handlerId: import('dnd-core').Identifier, isDragging: boolean, handleKeyDown: (event: import('react').KeyboardEvent<HTMLButtonElement>) => void}, objectRef: React.RefObject<HTMLElement>, dropRef: import('react-dnd').ConnectDropTarget, dragRef: import('react-dnd').ConnectDragSource, dragPreviewRef: import('react-dnd').ConnectDragPreview]}\n */\n\n/**\n * A utility hook abstracting the general drag and drop hooks from react-dnd.\n * Centralising the same behaviours and by default offering keyboard support.\n *\n * @type {(active: boolean, options: UseDragAndDropOptions) => UseDragAndDropReturn}\n */\nexport const useDragAndDrop = (\n  active,\n  {\n    type = 'STRAPI_DND',\n    index,\n    item = {},\n    onStart,\n    onEnd,\n    onGrabItem,\n    onDropItem,\n    onCancel,\n    onMoveItem,\n    dropSensitivity = 'regular',\n  }\n) => {\n  const objectRef = useRef(null);\n\n  const [{ handlerId }, dropRef] = useDrop({\n    accept: type,\n    collect(monitor) {\n      return {\n        handlerId: monitor.getHandlerId(),\n      };\n    },\n    hover(item, monitor) {\n      if (!objectRef.current) {\n        return;\n      }\n      const dragIndex = item.index;\n      const newInd = index;\n\n      // Don't replace items with themselves\n      if (dragIndex === newInd) {\n        return;\n      }\n\n      if (dropSensitivity === 'regular') {\n        const hoverBoundingRect = objectRef.current.getBoundingClientRect();\n        const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\n        const clientOffset = monitor.getClientOffset();\n        const hoverClientY = clientOffset.y - hoverBoundingRect.top;\n\n        // Dragging downwards\n        if (dragIndex < newInd && hoverClientY < hoverMiddleY) {\n          return;\n        }\n\n        // Dragging upwards\n        if (dragIndex > newInd && hoverClientY > hoverMiddleY) {\n          return;\n        }\n      }\n\n      // Time to actually perform the action\n      onMoveItem(newInd, dragIndex);\n      item.index = newInd;\n    },\n  });\n\n  const [{ isDragging }, dragRef, dragPreviewRef] = useDrag({\n    type,\n    item() {\n      if (onStart) {\n        onStart();\n      }\n\n      /**\n       * This will be attached and it helps define the preview sizes\n       * when a component is flexy e.g. Relations\n       */\n      const { width } = objectRef.current?.getBoundingClientRect() ?? {};\n\n      return { index, width, ...item };\n    },\n    end() {\n      if (onEnd) {\n        onEnd();\n      }\n    },\n    canDrag: active,\n    /**\n     * This is for useful when the item is in a virtualized list.\n     * However, if we don't have an ID then we want the libraries\n     * defaults to take care of this.\n     */\n    isDragging: item.id\n      ? (monitor) => {\n          return item.id === monitor.getItem().id;\n        }\n      : undefined,\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const handleKeyDown = useKeyboardDragAndDrop(active, index, {\n    onGrabItem,\n    onDropItem,\n    onCancel,\n    onMoveItem,\n  });\n\n  return [{ handlerId, isDragging, handleKeyDown }, objectRef, dropRef, dragRef, dragPreviewRef];\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nimport { initialState } from './reducer';\n\nconst selectAppDomain = () => (state) => {\n  return state['content-manager_app'] || initialState;\n};\n\nconst makeSelectApp = () =>\n  createSelector(selectAppDomain(), (substate) => {\n    return substate;\n  });\n\nconst makeSelectModels = () => createSelector(selectAppDomain(), (state) => state.models);\n\nconst makeSelectModelLinks = () =>\n  createSelector(selectAppDomain(), (state) => ({\n    collectionTypeLinks: state.collectionTypeLinks,\n    singleTypeLinks: state.singleTypeLinks,\n  }));\n\nconst makeSelectModelAndComponentSchemas = () =>\n  createSelector(selectAppDomain(), ({ components, models }) => ({\n    schemas: [...components, ...models],\n  }));\n\nconst selectFieldSizes = createSelector(selectAppDomain(), (state) => state.fieldSizes);\n\nexport default makeSelectApp;\nexport {\n  makeSelectModelAndComponentSchemas,\n  makeSelectModelLinks,\n  makeSelectModels,\n  selectAppDomain,\n  selectFieldSizes,\n};\n","/**\n * @typedef PossibleRef<T>\n * @type {React.Ref<T> | undefined;}\n *\n * @typedef setRef\n * @type {<T>(ref: PossibleRef<T>, value: T) => React.RefCallback<T>}\n */\n\n/**\n * @type {setRef}\n */\nconst setRef = (ref, value) => {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref !== null && ref !== undefined) {\n    ref.current = value;\n  }\n};\n\n/**\n * A utility to compose multiple refs together\n * Accepts callback refs and RefObject(s)\n *\n * @type {<T>(...refs: PossibleRef<T>[]) => (node: T) => void}\n */\nexport const composeRefs = (...refs) => {\n  return (node) => refs.forEach((ref) => setRef(ref, node));\n};\n","export default function isFieldTypeNumber(type) {\n  return ['integer', 'biginteger', 'decimal', 'float', 'number'].includes(type);\n}\n","import { translatedErrors as errorsTrads } from '@strapi/helper-plugin';\nimport get from 'lodash/get';\nimport isBoolean from 'lodash/isBoolean';\nimport isEmpty from 'lodash/isEmpty';\nimport isNaN from 'lodash/isNaN';\nimport toNumber from 'lodash/toNumber';\nimport * as yup from 'yup';\n\nimport isFieldTypeNumber from './isFieldTypeNumber';\n\nyup.addMethod(yup.mixed, 'defined', function () {\n  return this.test('defined', errorsTrads.required, (value) => value !== undefined);\n});\n\nyup.addMethod(yup.array, 'notEmptyMin', function (min) {\n  return this.test('notEmptyMin', errorsTrads.min, (value) => {\n    if (isEmpty(value)) {\n      return true;\n    }\n\n    return value.length >= min;\n  });\n});\n\nyup.addMethod(yup.string, 'isInferior', function (message, max) {\n  return this.test('isInferior', message, function (value) {\n    if (!value) {\n      return true;\n    }\n\n    if (Number.isNaN(toNumber(value))) {\n      return true;\n    }\n\n    return toNumber(max) >= toNumber(value);\n  });\n});\n\nyup.addMethod(yup.string, 'isSuperior', function (message, min) {\n  return this.test('isSuperior', message, function (value) {\n    if (!value) {\n      return true;\n    }\n\n    if (Number.isNaN(toNumber(value))) {\n      return true;\n    }\n\n    return toNumber(value) >= toNumber(min);\n  });\n});\n\nconst getAttributes = (data) => get(data, ['attributes'], {});\n\nconst createYupSchema = (\n  model,\n  { components },\n  options = {\n    isCreatingEntry: true,\n    isDraft: true,\n    isFromComponent: false,\n    isJSONTestDisabled: false,\n  }\n) => {\n  const attributes = getAttributes(model);\n\n  return yup.object().shape(\n    Object.keys(attributes).reduce((acc, current) => {\n      const attribute = attributes[current];\n\n      if (\n        attribute.type !== 'relation' &&\n        attribute.type !== 'component' &&\n        attribute.type !== 'dynamiczone'\n      ) {\n        const formatted = createYupSchemaAttribute(attribute.type, attribute, options);\n        acc[current] = formatted;\n      }\n\n      if (attribute.type === 'relation') {\n        acc[current] = [\n          'oneWay',\n          'oneToOne',\n          'manyToOne',\n          'oneToManyMorph',\n          'oneToOneMorph',\n        ].includes(attribute.relationType)\n          ? yup.object().nullable()\n          : yup.array().nullable();\n      }\n\n      if (attribute.type === 'component') {\n        const componentFieldSchema = createYupSchema(\n          components[attribute.component],\n          {\n            components,\n          },\n          { ...options, isFromComponent: true }\n        );\n\n        if (attribute.repeatable === true) {\n          const { min, max, required } = attribute;\n\n          let componentSchema = yup.lazy((value) => {\n            let baseSchema = yup.array().of(componentFieldSchema);\n\n            if (min) {\n              if (required) {\n                baseSchema = baseSchema.min(min, errorsTrads.min);\n              } else if (required !== true && isEmpty(value)) {\n                baseSchema = baseSchema.nullable();\n              } else {\n                baseSchema = baseSchema.min(min, errorsTrads.min);\n              }\n            } else if (required && !options.isDraft) {\n              baseSchema = baseSchema.min(1, errorsTrads.required);\n            }\n\n            if (max) {\n              baseSchema = baseSchema.max(max, errorsTrads.max);\n            }\n\n            return baseSchema;\n          });\n\n          acc[current] = componentSchema;\n\n          return acc;\n        }\n        const componentSchema = yup.lazy((obj) => {\n          if (obj !== undefined) {\n            return attribute.required === true && !options.isDraft\n              ? componentFieldSchema.defined()\n              : componentFieldSchema.nullable();\n          }\n\n          return attribute.required === true ? yup.object().defined() : yup.object().nullable();\n        });\n\n        acc[current] = componentSchema;\n\n        return acc;\n      }\n\n      if (attribute.type === 'dynamiczone') {\n        let dynamicZoneSchema = yup.array().of(\n          yup.lazy(({ __component }) => {\n            return createYupSchema(\n              components[__component],\n              { components },\n              { ...options, isFromComponent: true }\n            );\n          })\n        );\n\n        const { max, min } = attribute;\n\n        if (min) {\n          if (attribute.required) {\n            dynamicZoneSchema = dynamicZoneSchema\n              .test('min', errorsTrads.min, (value) => {\n                if (options.isCreatingEntry) {\n                  return value && value.length >= min;\n                }\n\n                if (value === undefined) {\n                  return true;\n                }\n\n                return value !== null && value.length >= min;\n              })\n              .test('required', errorsTrads.required, (value) => {\n                if (options.isCreatingEntry) {\n                  return value !== null || value !== undefined;\n                }\n\n                if (value === undefined) {\n                  return true;\n                }\n\n                return value !== null;\n              });\n          } else {\n            dynamicZoneSchema = dynamicZoneSchema.notEmptyMin(min);\n          }\n        } else if (attribute.required && !options.isDraft) {\n          dynamicZoneSchema = dynamicZoneSchema.test('required', errorsTrads.required, (value) => {\n            if (options.isCreatingEntry) {\n              return value !== null || value !== undefined;\n            }\n\n            if (value === undefined) {\n              return true;\n            }\n\n            return value !== null;\n          });\n        }\n\n        if (max) {\n          dynamicZoneSchema = dynamicZoneSchema.max(max, errorsTrads.max);\n        }\n\n        acc[current] = dynamicZoneSchema;\n      }\n\n      return acc;\n    }, {})\n  );\n};\n\nconst createYupSchemaAttribute = (type, validations, options) => {\n  let schema = yup.mixed();\n\n  if (['string', 'uid', 'text', 'richtext', 'email', 'password', 'enumeration'].includes(type)) {\n    schema = yup.string();\n  }\n\n  if (type === 'blocks') {\n    schema = yup.mixed().test('isJSON', errorsTrads.json, (value) => {\n      // Disable the test for bulk publish, it's valid when it comes from the db\n      if (options.isJSONTestDisabled) {\n        return true;\n      }\n\n      // Don't run validations on drafts\n      if (options.isDraft) {\n        return true;\n      }\n\n      // The backend validates the actual schema, check if a value different than null is not an array\n      if (value && !Array.isArray(value)) {\n        return false;\n      }\n\n      return true;\n    });\n  }\n\n  if (type === 'json') {\n    schema = yup\n      .mixed(errorsTrads.json)\n      .test('isJSON', errorsTrads.json, (value) => {\n        // Disable the test for bulk publish, it's valid when it comes from the db\n        if (options.isJSONTestDisabled) {\n          return true;\n        }\n\n        if (!value || !value.length) {\n          return true;\n        }\n\n        try {\n          JSON.parse(value);\n\n          return true;\n        } catch (err) {\n          return false;\n        }\n      })\n      .nullable()\n      .test('required', errorsTrads.required, (value) => {\n        if (validations.required && (!value || !value.length)) {\n          return false;\n        }\n\n        return true;\n      });\n  }\n\n  if (type === 'email') {\n    schema = schema.email(errorsTrads.email);\n  }\n\n  if (['number', 'integer', 'float', 'decimal'].includes(type)) {\n    schema = yup\n      .number()\n      .transform((cv) => (isNaN(cv) ? undefined : cv))\n      .typeError();\n  }\n\n  if (type === 'biginteger') {\n    schema = yup.string().matches(/^-?\\d*$/);\n  }\n\n  if (['date', 'datetime'].includes(type)) {\n    schema = yup.date();\n  }\n\n  Object.keys(validations).forEach((validation) => {\n    const validationValue = validations[validation];\n\n    if (\n      !!validationValue ||\n      (!isBoolean(validationValue) && Number.isInteger(Math.floor(validationValue))) ||\n      validationValue === 0\n    ) {\n      switch (validation) {\n        case 'required': {\n          if (!options.isDraft) {\n            if (type === 'password' && options.isCreatingEntry) {\n              schema = schema.required(errorsTrads.required);\n            }\n\n            if (type !== 'password') {\n              if (options.isCreatingEntry) {\n                schema = schema.required(errorsTrads.required);\n              } else {\n                schema = schema.test('required', errorsTrads.required, (value) => {\n                  // Field is not touched and the user is editing the entry\n                  if (value === undefined && !options.isFromComponent) {\n                    return true;\n                  }\n\n                  if (isFieldTypeNumber(type)) {\n                    if (value === 0) {\n                      return true;\n                    }\n\n                    return !!value;\n                  }\n\n                  if (type === 'boolean') {\n                    // Boolean value can be undefined/unset in modifiedData when generated in a new component\n                    return value !== null && value !== undefined;\n                  }\n\n                  if (type === 'date' || type === 'datetime') {\n                    if (typeof value === 'string') {\n                      return !isEmpty(value);\n                    }\n\n                    return !isEmpty(value?.toString());\n                  }\n\n                  return !isEmpty(value);\n                });\n              }\n            }\n          }\n\n          break;\n        }\n\n        case 'max': {\n          if (type === 'biginteger') {\n            schema = schema.isInferior(errorsTrads.max, validationValue);\n          } else {\n            schema = schema.max(validationValue, errorsTrads.max);\n          }\n          break;\n        }\n        case 'maxLength':\n          schema = schema.max(validationValue, errorsTrads.maxLength);\n          break;\n        case 'min': {\n          if (type === 'biginteger') {\n            schema = schema.isSuperior(errorsTrads.min, validationValue);\n          } else {\n            schema = schema.min(validationValue, errorsTrads.min);\n          }\n          break;\n        }\n        case 'minLength': {\n          if (!options.isDraft) {\n            schema = schema.min(validationValue, errorsTrads.minLength);\n          }\n          break;\n        }\n        case 'regex':\n          schema = schema.matches(new RegExp(validationValue), {\n            message: errorsTrads.regex,\n            excludeEmptyString: !validations.required,\n          });\n          break;\n        case 'lowercase':\n          if (['text', 'textarea', 'email', 'string'].includes(type)) {\n            schema = schema.strict().lowercase();\n          }\n          break;\n        case 'uppercase':\n          if (['text', 'textarea', 'email', 'string'].includes(type)) {\n            schema = schema.strict().uppercase();\n          }\n          break;\n        case 'positive':\n          if (isFieldTypeNumber(type)) {\n            schema = schema.positive();\n          }\n          break;\n        case 'negative':\n          if (isFieldTypeNumber(type)) {\n            schema = schema.negative();\n          }\n          break;\n        default:\n          schema = schema.nullable();\n      }\n    }\n  });\n\n  return schema;\n};\n\nexport default createYupSchema;\n"],"names":["createContext","index","useState","useRef","useDrop","item","useDrag","initialState","createSelector","yup","errorsTrads","isEmpty","toNumber","get","componentSchema","isNaN","isBoolean"],"mappings":"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"}