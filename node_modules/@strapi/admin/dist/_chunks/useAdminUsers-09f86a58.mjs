import * as React from "react";
import { useFetchClient } from "@strapi/helper-plugin";
import { useQuery } from "react-query";
function useAdminUsers(params = {}, queryOptions = {}) {
  const { id = "", ...queryParams } = params;
  const { get } = useFetchClient();
  const { data, isError, isLoading, refetch } = useQuery(
    ["users", id, queryParams],
    async () => {
      const {
        data: { data: data2 }
      } = await get(`/admin/users/${id}`, {
        params: queryParams
      });
      return data2;
    },
    queryOptions
  );
  const users = React.useMemo(() => {
    let users2 = [];
    if (data) {
      if ("results" in data) {
        if (Array.isArray(data.results)) {
          users2 = data.results;
        }
      } else {
        users2 = [data];
      }
    }
    return users2;
  }, [data]);
  return {
    users,
    pagination: React.useMemo(() => (data && "pagination" in data) ?? null, [data]),
    isLoading,
    isError,
    refetch
  };
}
export {
  useAdminUsers as u
};
//# sourceMappingURL=useAdminUsers-09f86a58.mjs.map
