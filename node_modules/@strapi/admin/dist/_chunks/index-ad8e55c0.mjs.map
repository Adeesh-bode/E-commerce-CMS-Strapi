{"version":3,"file":"index-ad8e55c0.mjs","sources":["../../admin/src/contexts/apiTokenPermissions.tsx","../../admin/src/pages/SettingsPage/pages/ApiTokens/EditView/utils/transformPermissionsData.js","../../admin/src/pages/SettingsPage/pages/ApiTokens/EditView/components/FormApiTokenContainer/index.js","../../admin/src/pages/SettingsPage/pages/ApiTokens/EditView/components/LoadingView/index.js","../../admin/src/pages/SettingsPage/pages/ApiTokens/EditView/components/BoundRoute/getMethodColor.js","../../admin/src/pages/SettingsPage/pages/ApiTokens/EditView/components/BoundRoute/index.js","../../admin/src/pages/SettingsPage/pages/ApiTokens/EditView/components/ActionBoundRoutes/index.js","../../admin/src/pages/SettingsPage/pages/ApiTokens/EditView/components/CollapsableContentType/CheckBoxWrapper.js","../../admin/src/pages/SettingsPage/pages/ApiTokens/EditView/components/CollapsableContentType/index.js","../../admin/src/pages/SettingsPage/pages/ApiTokens/EditView/components/ContenTypesSection/index.js","../../admin/src/pages/SettingsPage/pages/ApiTokens/EditView/components/Permissions/index.js","../../admin/src/pages/SettingsPage/pages/ApiTokens/EditView/init.js","../../admin/src/pages/SettingsPage/pages/ApiTokens/EditView/reducer.js","../../admin/src/pages/SettingsPage/pages/ApiTokens/EditView/index.js"],"sourcesContent":["/* eslint-disable check-file/filename-naming-convention */\n\nimport * as React from 'react';\n\nimport { createContext } from '@radix-ui/react-context';\nimport { Entity } from '@strapi/types';\n\ninterface PseudoEvent {\n  target: { value: string };\n}\n\ninterface ApiTokenPermissionsContextValue {\n  selectedAction: string[] | null;\n  routes: string[];\n  selectedActions: string[];\n  data: {\n    allActionsIds: Entity.ID[];\n    permissions: {\n      apiId: string;\n      label: string;\n      controllers: { controller: string; actions: { actionId: string; action: string } }[];\n    }[];\n  };\n  onChange: ({ target: { value } }: PseudoEvent) => void;\n  onChangeSelectAll: ({ target: { value } }: PseudoEvent) => void;\n  setSelectedAction: ({ target: { value } }: PseudoEvent) => void;\n}\n\ninterface ApiTokenPermissionsContextProviderProps extends ApiTokenPermissionsContextValue {\n  children: React.ReactNode[];\n}\n\nconst [ApiTokenPermissionsContextProvider, useApiTokenPermissionsContext] =\n  createContext<ApiTokenPermissionsContextValue>('ApiTokenPermissionsContext');\n\nconst ApiTokenPermissionsProvider = ({\n  children,\n  ...rest\n}: ApiTokenPermissionsContextProviderProps) => {\n  return (\n    <ApiTokenPermissionsContextProvider {...rest}>{children}</ApiTokenPermissionsContextProvider>\n  );\n};\n\nconst useApiTokenPermissions = () => useApiTokenPermissionsContext('useApiTokenPermissions');\n\nexport { ApiTokenPermissionsProvider, useApiTokenPermissions };\nexport type { ApiTokenPermissionsContextValue, ApiTokenPermissionsContextProviderProps };\n","const transformPermissionsData = (data) => {\n  const layout = {\n    allActionsIds: [],\n    permissions: [],\n  };\n\n  layout.permissions = Object.keys(data).map((apiId) => ({\n    apiId,\n    label: apiId.split('::')[1],\n    controllers: Object.keys(data[apiId].controllers)\n      .map((controller) => ({\n        controller,\n        actions: data[apiId].controllers[controller]\n          .map((action) => {\n            const actionId = `${apiId}.${controller}.${action}`;\n\n            if (apiId.includes('api::')) {\n              layout.allActionsIds.push(actionId);\n            }\n\n            return {\n              action,\n              actionId,\n            };\n          })\n          .flat(),\n      }))\n      .flat(),\n  }));\n\n  return layout;\n};\n\nexport default transformPermissionsData;\n","import React from 'react';\n\nimport { Box, Flex, Grid, GridItem, Typography } from '@strapi/design-system';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nimport LifeSpanInput from '../../../../../components/Tokens/LifeSpanInput';\nimport TokenDescription from '../../../../../components/Tokens/TokenDescription';\nimport TokenName from '../../../../../components/Tokens/TokenName';\nimport TokenTypeSelect from '../../../../../components/Tokens/TokenTypeSelect';\n\nconst FormApiTokenContainer = ({\n  errors,\n  onChange,\n  canEditInputs,\n  isCreating,\n  values,\n  apiToken,\n  onDispatch,\n  setHasChangedPermissions,\n}) => {\n  const { formatMessage } = useIntl();\n\n  const handleChangeSelectApiTokenType = ({ target: { value } }) => {\n    setHasChangedPermissions(false);\n\n    if (value === 'full-access') {\n      onDispatch({\n        type: 'SELECT_ALL_ACTIONS',\n      });\n    }\n    if (value === 'read-only') {\n      onDispatch({\n        type: 'ON_CHANGE_READ_ONLY',\n      });\n    }\n  };\n\n  const typeOptions = [\n    {\n      value: 'read-only',\n      label: {\n        id: 'Settings.tokens.types.read-only',\n        defaultMessage: 'Read-only',\n      },\n    },\n    {\n      value: 'full-access',\n      label: {\n        id: 'Settings.tokens.types.full-access',\n        defaultMessage: 'Full access',\n      },\n    },\n    {\n      value: 'custom',\n      label: {\n        id: 'Settings.tokens.types.custom',\n        defaultMessage: 'Custom',\n      },\n    },\n  ];\n\n  return (\n    <Box\n      background=\"neutral0\"\n      hasRadius\n      shadow=\"filterShadow\"\n      paddingTop={6}\n      paddingBottom={6}\n      paddingLeft={7}\n      paddingRight={7}\n    >\n      <Flex direction=\"column\" alignItems=\"stretch\" gap={4}>\n        <Typography variant=\"delta\" as=\"h2\">\n          {formatMessage({\n            id: 'global.details',\n            defaultMessage: 'Details',\n          })}\n        </Typography>\n        <Grid gap={5}>\n          <GridItem key=\"name\" col={6} xs={12}>\n            <TokenName\n              errors={errors}\n              values={values}\n              canEditInputs={canEditInputs}\n              onChange={onChange}\n            />\n          </GridItem>\n          <GridItem key=\"description\" col={6} xs={12}>\n            <TokenDescription\n              errors={errors}\n              values={values}\n              canEditInputs={canEditInputs}\n              onChange={onChange}\n            />\n          </GridItem>\n          <GridItem key=\"lifespan\" col={6} xs={12}>\n            <LifeSpanInput\n              isCreating={isCreating}\n              errors={errors}\n              values={values}\n              onChange={onChange}\n              token={apiToken}\n            />\n          </GridItem>\n\n          <GridItem key=\"type\" col={6} xs={12}>\n            <TokenTypeSelect\n              values={values}\n              errors={errors}\n              label={{\n                id: 'Settings.tokens.form.type',\n                defaultMessage: 'Token type',\n              }}\n              onChange={(value) => {\n                handleChangeSelectApiTokenType({ target: { value } });\n                onChange({ target: { name: 'type', value } });\n              }}\n              options={typeOptions}\n              canEditInputs={canEditInputs}\n            />\n          </GridItem>\n        </Grid>\n      </Flex>\n    </Box>\n  );\n};\n\nFormApiTokenContainer.propTypes = {\n  errors: PropTypes.shape({\n    name: PropTypes.string,\n    description: PropTypes.string,\n    lifespan: PropTypes.string,\n    type: PropTypes.string,\n  }),\n  onChange: PropTypes.func.isRequired,\n  canEditInputs: PropTypes.bool.isRequired,\n  values: PropTypes.shape({\n    name: PropTypes.string,\n    description: PropTypes.string,\n    lifespan: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    type: PropTypes.string,\n  }).isRequired,\n  isCreating: PropTypes.bool.isRequired,\n  apiToken: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    type: PropTypes.string,\n    lifespan: PropTypes.string,\n    name: PropTypes.string,\n    accessKey: PropTypes.string,\n    permissions: PropTypes.array,\n    description: PropTypes.string,\n    createdAt: PropTypes.string,\n  }),\n  onDispatch: PropTypes.func.isRequired,\n  setHasChangedPermissions: PropTypes.func.isRequired,\n};\n\nFormApiTokenContainer.defaultProps = {\n  errors: {},\n  apiToken: {},\n};\n\nexport default FormApiTokenContainer;\n","import React from 'react';\n\nimport { Button, ContentLayout, HeaderLayout, Main } from '@strapi/design-system';\nimport {\n  LoadingIndicatorPage,\n  SettingsPageTitle,\n  useFocusWhenNavigate,\n} from '@strapi/helper-plugin';\nimport { Check } from '@strapi/icons';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\n\nconst LoadingView = ({ apiTokenName }) => {\n  const { formatMessage } = useIntl();\n  useFocusWhenNavigate();\n\n  return (\n    <Main aria-busy=\"true\">\n      <SettingsPageTitle name=\"API Tokens\" />\n      <HeaderLayout\n        primaryAction={\n          <Button disabled startIcon={<Check />} type=\"button\" size=\"L\">\n            {formatMessage({ id: 'global.save', defaultMessage: 'Save' })}\n          </Button>\n        }\n        title={\n          apiTokenName ||\n          formatMessage({\n            id: 'Settings.apiTokens.createPage.title',\n            defaultMessage: 'Create API Token',\n          })\n        }\n      />\n      <ContentLayout>\n        <LoadingIndicatorPage />\n      </ContentLayout>\n    </Main>\n  );\n};\n\nLoadingView.defaultProps = {\n  apiTokenName: null,\n};\n\nLoadingView.propTypes = {\n  apiTokenName: PropTypes.string,\n};\n\nexport default LoadingView;\n","const getMethodColor = (verb) => {\n  switch (verb) {\n    case 'POST': {\n      return {\n        text: 'success600',\n        border: 'success200',\n        background: 'success100',\n      };\n    }\n    case 'GET': {\n      return {\n        text: 'secondary600',\n        border: 'secondary200',\n        background: 'secondary100',\n      };\n    }\n    case 'PUT': {\n      return {\n        text: 'warning600',\n        border: 'warning200',\n        background: 'warning100',\n      };\n    }\n    case 'DELETE': {\n      return {\n        text: 'danger600',\n        border: 'danger200',\n        background: 'danger100',\n      };\n    }\n    default: {\n      return {\n        text: 'neutral600',\n        border: 'neutral200',\n        background: 'neutral100',\n      };\n    }\n  }\n};\n\nexport default getMethodColor;\n","import React from 'react';\n\nimport { Box, Flex, Typography } from '@strapi/design-system';\nimport map from 'lodash/map';\nimport tail from 'lodash/tail';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport getMethodColor from './getMethodColor';\n\nconst MethodBox = styled(Box)`\n  margin: -1px;\n  border-radius: ${({ theme }) => theme.spaces[1]} 0 0 ${({ theme }) => theme.spaces[1]};\n`;\n\nfunction BoundRoute({ route }) {\n  const { formatMessage } = useIntl();\n\n  const { method, handler: title, path } = route;\n  const formattedRoute = path ? tail(path.split('/')) : [];\n  const [controller = '', action = ''] = title ? title.split('.') : [];\n  const colors = getMethodColor(route.method);\n\n  return (\n    <Flex direction=\"column\" alignItems=\"stretch\" gap={2}>\n      <Typography variant=\"delta\" as=\"h3\">\n        {formatMessage({\n          id: 'Settings.apiTokens.createPage.BoundRoute.title',\n          defaultMessage: 'Bound route to',\n        })}\n        &nbsp;\n        <span>{controller}</span>\n        <Typography variant=\"delta\" textColor=\"primary600\">\n          .{action}\n        </Typography>\n      </Typography>\n      <Flex hasRadius background=\"neutral0\" borderColor=\"neutral200\" gap={0}>\n        <MethodBox background={colors.background} borderColor={colors.border} padding={2}>\n          <Typography fontWeight=\"bold\" textColor={colors.text}>\n            {method}\n          </Typography>\n        </MethodBox>\n        <Box paddingLeft={2} paddingRight={2}>\n          {map(formattedRoute, (value) => (\n            <Typography key={value} textColor={value.includes(':') ? 'neutral600' : 'neutral900'}>\n              /{value}\n            </Typography>\n          ))}\n        </Box>\n      </Flex>\n    </Flex>\n  );\n}\n\nBoundRoute.defaultProps = {\n  route: {\n    handler: 'Nocontroller.error',\n    method: 'GET',\n    path: '/there-is-no-path',\n  },\n};\n\nBoundRoute.propTypes = {\n  route: PropTypes.shape({\n    handler: PropTypes.string,\n    method: PropTypes.string,\n    path: PropTypes.string,\n  }),\n};\n\nexport default BoundRoute;\n","import React from 'react';\n\nimport { Flex, GridItem, Typography } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { useApiTokenPermissions } from '../../../../../../../contexts/apiTokenPermissions';\nimport BoundRoute from '../BoundRoute';\n\nconst ActionBoundRoutes = () => {\n  const {\n    value: { selectedAction, routes },\n  } = useApiTokenPermissions();\n  const { formatMessage } = useIntl();\n  const actionSection = selectedAction?.split('.')[0];\n\n  return (\n    <GridItem\n      col={5}\n      background=\"neutral150\"\n      paddingTop={6}\n      paddingBottom={6}\n      paddingLeft={7}\n      paddingRight={7}\n      style={{ minHeight: '100%' }}\n    >\n      {selectedAction ? (\n        <Flex direction=\"column\" alignItems=\"stretch\" gap={2}>\n          {routes[actionSection]?.map((route) => {\n            return route.config.auth?.scope?.includes(selectedAction) ||\n              route.handler === selectedAction ? (\n              <BoundRoute key={route.handler} route={route} />\n            ) : null;\n          })}\n        </Flex>\n      ) : (\n        <Flex direction=\"column\" alignItems=\"stretch\" gap={2}>\n          <Typography variant=\"delta\" as=\"h3\">\n            {formatMessage({\n              id: 'Settings.apiTokens.createPage.permissions.header.title',\n              defaultMessage: 'Advanced settings',\n            })}\n          </Typography>\n          <Typography as=\"p\" textColor=\"neutral600\">\n            {formatMessage({\n              id: 'Settings.apiTokens.createPage.permissions.header.hint',\n              defaultMessage:\n                \"Select the application's actions or the plugin's actions and click on the cog icon to display the bound route\",\n            })}\n          </Typography>\n        </Flex>\n      )}\n    </GridItem>\n  );\n};\n\nexport default ActionBoundRoutes;\n","import { Box } from '@strapi/design-system';\nimport styled, { css } from 'styled-components';\n\nconst activeCheckboxWrapperStyles = css`\n  background: ${(props) => props.theme.colors.primary100};\n  svg {\n    opacity: 1;\n  }\n`;\n\nconst CheckboxWrapper = styled(Box)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  svg {\n    opacity: 0;\n    path {\n      fill: ${(props) => props.theme.colors.primary600};\n    }\n  }\n\n  /* Show active style both on hover and when the action is selected */\n  ${(props) => props.isActive && activeCheckboxWrapperStyles}\n  &:hover {\n    ${activeCheckboxWrapperStyles}\n  }\n`;\n\nexport default CheckboxWrapper;\n","import React, { useEffect, useState } from 'react';\n\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionToggle,\n  Box,\n  Checkbox,\n  Flex,\n  Grid,\n  GridItem,\n  Typography,\n} from '@strapi/design-system';\nimport { Cog } from '@strapi/icons';\nimport capitalize from 'lodash/capitalize';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport styled from 'styled-components';\n\nimport { useApiTokenPermissions } from '../../../../../../../contexts/apiTokenPermissions';\n\nimport CheckboxWrapper from './CheckBoxWrapper';\n\nconst Border = styled.div`\n  flex: 1;\n  align-self: center;\n  border-top: 1px solid ${({ theme }) => theme.colors.neutral150};\n`;\n\nconst CollapsableContentType = ({\n  controllers,\n  label,\n  orderNumber,\n  disabled,\n  onExpanded,\n  indexExpandendCollapsedContent,\n}) => {\n  const {\n    value: { onChangeSelectAll, onChange, selectedActions, setSelectedAction, selectedAction },\n  } = useApiTokenPermissions();\n  const [expanded, setExpanded] = useState(false);\n  const { formatMessage } = useIntl();\n\n  const handleExpandedAccordion = () => {\n    setExpanded((s) => !s);\n    onExpanded(orderNumber);\n  };\n\n  useEffect(() => {\n    if (\n      indexExpandendCollapsedContent !== null &&\n      indexExpandendCollapsedContent !== orderNumber &&\n      expanded\n    ) {\n      setExpanded(false);\n    }\n  }, [indexExpandendCollapsedContent, orderNumber, expanded]);\n\n  const isActionSelected = (actionId) => actionId === selectedAction;\n\n  return (\n    <Accordion\n      expanded={expanded}\n      onToggle={handleExpandedAccordion}\n      variant={orderNumber % 2 ? 'primary' : 'secondary'}\n    >\n      <AccordionToggle title={capitalize(label)} />\n      <AccordionContent>\n        {controllers?.map((controller) => {\n          const allActionsSelected = controller.actions.every((action) =>\n            selectedActions.includes(action.actionId)\n          );\n\n          const someActionsSelected = controller.actions.some((action) =>\n            selectedActions.includes(action.actionId)\n          );\n\n          return (\n            <Box key={`${label}.${controller?.controller}`}>\n              <Flex justifyContent=\"space-between\" alignItems=\"center\" padding={4}>\n                <Box paddingRight={4}>\n                  <Typography variant=\"sigma\" textColor=\"neutral600\">\n                    {controller?.controller}\n                  </Typography>\n                </Box>\n                <Border />\n                <Box paddingLeft={4}>\n                  <Checkbox\n                    value={allActionsSelected}\n                    indeterminate={!allActionsSelected && someActionsSelected}\n                    onValueChange={() => {\n                      onChangeSelectAll({ target: { value: [...controller.actions] } });\n                    }}\n                    disabled={disabled}\n                  >\n                    {formatMessage({ id: 'app.utils.select-all', defaultMessage: 'Select all' })}\n                  </Checkbox>\n                </Box>\n              </Flex>\n              <Grid gap={4} padding={4}>\n                {controller?.actions &&\n                  controller?.actions.map((action) => {\n                    return (\n                      <GridItem col={6} key={action.actionId}>\n                        <CheckboxWrapper\n                          isActive={isActionSelected(action.actionId)}\n                          padding={2}\n                          hasRadius\n                        >\n                          <Checkbox\n                            value={selectedActions.includes(action.actionId)}\n                            name={action.actionId}\n                            onValueChange={() => {\n                              onChange({ target: { value: action.actionId } });\n                            }}\n                            disabled={disabled}\n                          >\n                            {action.action}\n                          </Checkbox>\n                          <button\n                            type=\"button\"\n                            data-testid=\"action-cog\"\n                            onClick={() =>\n                              setSelectedAction({ target: { value: action.actionId } })\n                            }\n                            style={{ display: 'inline-flex', alignItems: 'center' }}\n                          >\n                            <Cog />\n                          </button>\n                        </CheckboxWrapper>\n                      </GridItem>\n                    );\n                  })}\n              </Grid>\n            </Box>\n          );\n        })}\n      </AccordionContent>\n    </Accordion>\n  );\n};\n\nCollapsableContentType.defaultProps = {\n  controllers: [],\n  orderNumber: 0,\n  disabled: false,\n  onExpanded: () => null,\n  indexExpandendCollapsedContent: null,\n};\n\nCollapsableContentType.propTypes = {\n  controllers: PropTypes.array,\n  orderNumber: PropTypes.number,\n  label: PropTypes.string.isRequired,\n  disabled: PropTypes.bool,\n  onExpanded: PropTypes.func,\n  indexExpandendCollapsedContent: PropTypes.number,\n};\n\nexport default CollapsableContentType;\n","import React, { useState } from 'react';\n\nimport { Box } from '@strapi/design-system';\nimport PropTypes from 'prop-types';\n\nimport CollapsableContentType from '../CollapsableContentType';\n\nconst ContentTypesSection = ({ section, ...props }) => {\n  const [indexExpandedCollpsedContent, setIndexExpandedCollpsedContent] = useState(null);\n  const handleExpandedCollpsedContentIndex = (index) => setIndexExpandedCollpsedContent(index);\n\n  return (\n    <Box padding={4} background=\"neutral0\">\n      {section &&\n        section.map((api, index) => (\n          <CollapsableContentType\n            key={api.apiId}\n            label={api.label}\n            controllers={api.controllers}\n            orderNumber={index}\n            indexExpandendCollapsedContent={indexExpandedCollpsedContent}\n            onExpanded={handleExpandedCollpsedContentIndex}\n            name={api.apiId}\n            {...props}\n          />\n        ))}\n    </Box>\n  );\n};\n\nContentTypesSection.defaultProps = {\n  section: null,\n};\n\nContentTypesSection.propTypes = {\n  section: PropTypes.arrayOf(PropTypes.object),\n};\n\nexport default ContentTypesSection;\n","import React, { memo } from 'react';\n\nimport { Flex, Grid, GridItem, Typography } from '@strapi/design-system';\nimport { useIntl } from 'react-intl';\n\nimport { useApiTokenPermissions } from '../../../../../../../contexts/apiTokenPermissions';\nimport ActionBoundRoutes from '../ActionBoundRoutes';\nimport ContentTypesSection from '../ContenTypesSection';\n\nconst Permissions = ({ ...props }) => {\n  const {\n    value: { data },\n  } = useApiTokenPermissions();\n  const { formatMessage } = useIntl();\n\n  return (\n    <Grid gap={0} shadow=\"filterShadow\" hasRadius background=\"neutral0\">\n      <GridItem col={7} paddingTop={6} paddingBottom={6} paddingLeft={7} paddingRight={7}>\n        <Flex direction=\"column\" alignItems=\"stretch\" gap={2}>\n          <Typography variant=\"delta\" as=\"h2\">\n            {formatMessage({\n              id: 'Settings.apiTokens.createPage.permissions.title',\n              defaultMessage: 'Permissions',\n            })}\n          </Typography>\n          <Typography as=\"p\" textColor=\"neutral600\">\n            {formatMessage({\n              id: 'Settings.apiTokens.createPage.permissions.description',\n              defaultMessage: 'Only actions bound by a route are listed below.',\n            })}\n          </Typography>\n        </Flex>\n        {data?.permissions && <ContentTypesSection section={data?.permissions} {...props} />}\n      </GridItem>\n      <ActionBoundRoutes />\n    </Grid>\n  );\n};\n\nexport default memo(Permissions);\n","import { transformPermissionsData } from './utils';\n\nconst init = (state, permissions = []) => {\n  return {\n    ...state,\n    selectedAction: null,\n    routes: [],\n    selectedActions: [],\n    data: transformPermissionsData(permissions),\n  };\n};\n\nexport default init;\n","/* eslint-disable consistent-return */\nimport produce from 'immer';\nimport pull from 'lodash/pull';\n\nimport { transformPermissionsData } from './utils';\n\nexport const initialState = {\n  data: {},\n  selectedActions: [],\n};\n\nconst reducer = (state, action) =>\n  produce(state, (draftState) => {\n    switch (action.type) {\n      case 'ON_CHANGE': {\n        if (draftState.selectedActions.includes(action.value)) {\n          pull(draftState.selectedActions, action.value);\n        } else {\n          draftState.selectedActions.push(action.value);\n        }\n        break;\n      }\n      case 'SELECT_ALL_IN_PERMISSION': {\n        const areAllSelected = action.value.every((item) =>\n          draftState.selectedActions.includes(item.actionId)\n        );\n\n        if (areAllSelected) {\n          action.value.forEach((item) => {\n            pull(draftState.selectedActions, item.actionId);\n          });\n        } else {\n          action.value.forEach((item) => {\n            draftState.selectedActions.push(item.actionId);\n          });\n        }\n        break;\n      }\n\n      case 'SELECT_ALL_ACTIONS': {\n        draftState.selectedActions = [...draftState.data.allActionsIds];\n\n        break;\n      }\n      case 'ON_CHANGE_READ_ONLY': {\n        const onlyReadOnlyActions = draftState.data.allActionsIds.filter(\n          (actionId) => actionId.includes('find') || actionId.includes('findOne')\n        );\n        draftState.selectedActions = [...onlyReadOnlyActions];\n        break;\n      }\n      case 'UPDATE_PERMISSIONS_LAYOUT': {\n        draftState.data = transformPermissionsData(action.value);\n        break;\n      }\n      case 'UPDATE_ROUTES': {\n        draftState.routes = { ...action.value };\n        break;\n      }\n      case 'UPDATE_PERMISSIONS': {\n        draftState.selectedActions = [...action.value];\n        break;\n      }\n      case 'SET_SELECTED_ACTION': {\n        draftState.selectedAction = action.value;\n        break;\n      }\n      default:\n        return draftState;\n    }\n  });\n\nexport default reducer;\n","import React, { useEffect, useReducer, useRef, useState } from 'react';\n\nimport { ContentLayout, Flex, Main } from '@strapi/design-system';\nimport {\n  Form,\n  SettingsPageTitle,\n  useFetchClient,\n  useFocusWhenNavigate,\n  useGuidedTour,\n  useNotification,\n  useOverlayBlocker,\n  useRBAC,\n  useTracking,\n} from '@strapi/helper-plugin';\nimport { Formik } from 'formik';\nimport { useIntl } from 'react-intl';\nimport { useQuery } from 'react-query';\nimport { useSelector } from 'react-redux';\nimport { useHistory, useRouteMatch } from 'react-router-dom';\n\nimport { ApiTokenPermissionsProvider } from '../../../../../contexts/apiTokenPermissions';\nimport { selectAdminPermissions } from '../../../../../selectors';\nimport { formatAPIErrors } from '../../../../../utils/formatAPIErrors';\nimport { API_TOKEN_TYPE } from '../../../components/Tokens/constants';\nimport FormHead from '../../../components/Tokens/FormHead';\nimport TokenBox from '../../../components/Tokens/TokenBox';\n\nimport FormApiTokenContainer from './components/FormApiTokenContainer';\nimport LoadingView from './components/LoadingView';\nimport Permissions from './components/Permissions';\nimport init from './init';\nimport reducer, { initialState } from './reducer';\nimport { schema } from './utils';\n\nconst MSG_ERROR_NAME_TAKEN = 'Name already taken';\n\nconst ApiTokenCreateView = () => {\n  useFocusWhenNavigate();\n  const { formatMessage } = useIntl();\n  const { lockApp, unlockApp } = useOverlayBlocker();\n  const toggleNotification = useNotification();\n  const history = useHistory();\n  const permissions = useSelector(selectAdminPermissions);\n  const [apiToken, setApiToken] = useState(\n    history.location.state?.apiToken.accessKey\n      ? {\n          ...history.location.state.apiToken,\n        }\n      : null\n  );\n  const { trackUsage } = useTracking();\n  const trackUsageRef = useRef(trackUsage);\n  const { setCurrentStep } = useGuidedTour();\n  const {\n    allowedActions: { canCreate, canUpdate, canRegenerate },\n  } = useRBAC(permissions.settings['api-tokens']);\n  const [state, dispatch] = useReducer(reducer, initialState, (state) => init(state, {}));\n  const {\n    params: { id },\n  } = useRouteMatch('/settings/api-tokens/:id');\n  const { get, post, put } = useFetchClient();\n\n  const isCreating = id === 'create';\n\n  useQuery(\n    'content-api-permissions',\n    async () => {\n      const [permissions, routes] = await Promise.all(\n        ['/admin/content-api/permissions', '/admin/content-api/routes'].map(async (url) => {\n          const { data } = await get(url);\n\n          return data.data;\n        })\n      );\n\n      dispatch({\n        type: 'UPDATE_PERMISSIONS_LAYOUT',\n        value: permissions,\n      });\n\n      dispatch({\n        type: 'UPDATE_ROUTES',\n        value: routes,\n      });\n\n      if (apiToken) {\n        if (apiToken?.type === 'read-only') {\n          dispatch({\n            type: 'ON_CHANGE_READ_ONLY',\n          });\n        }\n        if (apiToken?.type === 'full-access') {\n          dispatch({\n            type: 'SELECT_ALL_ACTIONS',\n          });\n        }\n        if (apiToken?.type === 'custom') {\n          dispatch({\n            type: 'UPDATE_PERMISSIONS',\n            value: apiToken?.permissions,\n          });\n        }\n      }\n    },\n    {\n      onError() {\n        toggleNotification({\n          type: 'warning',\n          message: { id: 'notification.error', defaultMessage: 'An error occured' },\n        });\n      },\n    }\n  );\n\n  useEffect(() => {\n    trackUsageRef.current(isCreating ? 'didAddTokenFromList' : 'didEditTokenFromList', {\n      tokenType: API_TOKEN_TYPE,\n    });\n  }, [isCreating]);\n\n  const { status } = useQuery(\n    ['api-token', id],\n    async () => {\n      const {\n        data: { data },\n      } = await get(`/admin/api-tokens/${id}`);\n\n      setApiToken({\n        ...data,\n      });\n\n      if (data?.type === 'read-only') {\n        dispatch({\n          type: 'ON_CHANGE_READ_ONLY',\n        });\n      }\n      if (data?.type === 'full-access') {\n        dispatch({\n          type: 'SELECT_ALL_ACTIONS',\n        });\n      }\n      if (data?.type === 'custom') {\n        dispatch({\n          type: 'UPDATE_PERMISSIONS',\n          value: data?.permissions,\n        });\n      }\n\n      return data;\n    },\n    {\n      enabled: !isCreating && !apiToken,\n      onError() {\n        toggleNotification({\n          type: 'warning',\n          message: { id: 'notification.error', defaultMessage: 'An error occured' },\n        });\n      },\n    }\n  );\n\n  const handleSubmit = async (body, actions) => {\n    trackUsageRef.current(isCreating ? 'willCreateToken' : 'willEditToken', {\n      tokenType: API_TOKEN_TYPE,\n    });\n    lockApp();\n    const lifespanVal =\n      body.lifespan && parseInt(body.lifespan, 10) && body.lifespan !== '0'\n        ? parseInt(body.lifespan, 10)\n        : null;\n\n    try {\n      const {\n        data: { data: response },\n      } = isCreating\n        ? await post(`/admin/api-tokens`, {\n            ...body,\n            lifespan: lifespanVal,\n            permissions: body.type === 'custom' ? state.selectedActions : null,\n          })\n        : await put(`/admin/api-tokens/${id}`, {\n            name: body.name,\n            description: body.description,\n            type: body.type,\n            permissions: body.type === 'custom' ? state.selectedActions : null,\n          });\n\n      if (isCreating) {\n        history.replace(`/settings/api-tokens/${response.id}`, { apiToken: response });\n        setCurrentStep('apiTokens.success');\n      }\n      unlockApp();\n      setApiToken({\n        ...response,\n      });\n\n      toggleNotification({\n        type: 'success',\n        message: isCreating\n          ? formatMessage({\n              id: 'notification.success.apitokencreated',\n              defaultMessage: 'API Token successfully created',\n            })\n          : formatMessage({\n              id: 'notification.success.apitokenedited',\n              defaultMessage: 'API Token successfully edited',\n            }),\n      });\n\n      trackUsageRef.current(isCreating ? 'didCreateToken' : 'didEditToken', {\n        type: apiToken.type,\n        tokenType: API_TOKEN_TYPE,\n      });\n    } catch (err) {\n      const errors = formatAPIErrors(err.response.data);\n      actions.setErrors(errors);\n\n      if (err?.response?.data?.error?.message === MSG_ERROR_NAME_TAKEN) {\n        toggleNotification({\n          type: 'warning',\n          message: err.response.data.message || 'notification.error.tokennamenotunique',\n        });\n      } else {\n        toggleNotification({\n          type: 'warning',\n          message: err?.response?.data?.message || 'notification.error',\n        });\n      }\n      unlockApp();\n    }\n  };\n\n  const [hasChangedPermissions, setHasChangedPermissions] = useState(false);\n\n  const handleChangeCheckbox = ({ target: { value } }) => {\n    setHasChangedPermissions(true);\n    dispatch({\n      type: 'ON_CHANGE',\n      value,\n    });\n  };\n\n  const handleChangeSelectAllCheckbox = ({ target: { value } }) => {\n    setHasChangedPermissions(true);\n    dispatch({\n      type: 'SELECT_ALL_IN_PERMISSION',\n      value,\n    });\n  };\n\n  const setSelectedAction = ({ target: { value } }) => {\n    dispatch({\n      type: 'SET_SELECTED_ACTION',\n      value,\n    });\n  };\n\n  const providerValue = {\n    ...state,\n    onChange: handleChangeCheckbox,\n    onChangeSelectAll: handleChangeSelectAllCheckbox,\n    setSelectedAction,\n  };\n\n  const canEditInputs = (canUpdate && !isCreating) || (canCreate && isCreating);\n  const isLoading = !isCreating && !apiToken && status !== 'success';\n\n  if (isLoading) {\n    return <LoadingView apiTokenName={apiToken?.name} />;\n  }\n\n  return (\n    <ApiTokenPermissionsProvider value={providerValue}>\n      <Main>\n        <SettingsPageTitle name=\"API Tokens\" />\n        <Formik\n          validationSchema={schema}\n          validateOnChange={false}\n          initialValues={{\n            name: apiToken?.name || '',\n            description: apiToken?.description || '',\n            type: apiToken?.type,\n            lifespan: apiToken?.lifespan ? apiToken.lifespan.toString() : apiToken?.lifespan,\n          }}\n          enableReinitialize\n          onSubmit={(body, actions) => handleSubmit(body, actions)}\n        >\n          {({ errors, handleChange, isSubmitting, values, setFieldValue }) => {\n            if (hasChangedPermissions && values?.type !== 'custom') {\n              setFieldValue('type', 'custom');\n            }\n\n            return (\n              <Form>\n                <FormHead\n                  backUrl=\"/settings/api-tokens\"\n                  title={{\n                    id: 'Settings.apiTokens.createPage.title',\n                    defaultMessage: 'Create API Token',\n                  }}\n                  token={apiToken}\n                  setToken={setApiToken}\n                  canEditInputs={canEditInputs}\n                  canRegenerate={canRegenerate}\n                  isSubmitting={isSubmitting}\n                  regenerateUrl=\"/admin/api-tokens/\"\n                />\n\n                <ContentLayout>\n                  <Flex direction=\"column\" alignItems=\"stretch\" gap={6}>\n                    {Boolean(apiToken?.name) && (\n                      <TokenBox token={apiToken?.accessKey} tokenType={API_TOKEN_TYPE} />\n                    )}\n                    <FormApiTokenContainer\n                      errors={errors}\n                      onChange={handleChange}\n                      canEditInputs={canEditInputs}\n                      isCreating={isCreating}\n                      values={values}\n                      apiToken={apiToken}\n                      onDispatch={dispatch}\n                      setHasChangedPermissions={setHasChangedPermissions}\n                    />\n                    <Permissions\n                      disabled={\n                        !canEditInputs ||\n                        values?.type === 'read-only' ||\n                        values?.type === 'full-access'\n                      }\n                    />\n                  </Flex>\n                </ContentLayout>\n              </Form>\n            );\n          }}\n        </Formik>\n      </Main>\n    </ApiTokenPermissionsProvider>\n  );\n};\n\nexport default ApiTokenCreateView;\n"],"names":["state","permissions","Permissions"],"mappings":"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"}