import * as Users from '../../../shared/contracts/user';
export type APIUsersQueryParams = Users.FindOne.Params | (Users.FindAll.Request['query'] & {
    id?: never;
});
export declare function useAdminUsers(params?: APIUsersQueryParams, queryOptions?: {}): {
    users: import("..").SanitizedAdminUser[];
    pagination: boolean | null;
    isLoading: boolean;
    isError: boolean;
    refetch: <TPageData>(options?: (import("react-query").RefetchOptions & import("react-query").RefetchQueryFilters<TPageData>) | undefined) => Promise<import("react-query").QueryObserverResult<import("..").SanitizedAdminUser | {
        results: import("..").SanitizedAdminUser[];
        pagination: {
            page: number;
            pageSize: number;
            pageCount: number;
            total: number;
        };
    }, unknown>>;
};
