import type { Entity, EntityService } from '@strapi/types';
import type { errors } from '@strapi/utils';
import { Permission, SanitizedAdminRole } from './shared';
type SanitizedAdminRoleWithUsersCount = SanitizedAdminRole & {
    usersCount?: number;
};
/**
 * GET /roles/:id/permissions - Get the permissions of a role
 */
export declare namespace GetPermissions {
    interface Request {
        params: {
            id: string;
        };
        query: {};
        body: {};
    }
    interface Response {
        data: Permission[];
        error?: errors.ApplicationError | errors.NotFoundError;
    }
}
/**
 * GET /roles/:id - Find a role by ID
 */
export declare namespace FindOne {
    interface Request {
        params: {
            id: Entity.ID;
        };
        query: {};
        body: {};
    }
    interface Response {
        data: SanitizedAdminRoleWithUsersCount;
        error?: errors.ApplicationError | errors.NotFoundError;
    }
}
/**
 * GET /roles
 */
export declare namespace FindAll {
    interface Request {
        query: EntityService.Params.Pick<'admin::role', 'sort' | 'filters' | 'fields'>;
        body: {};
    }
    interface Response {
        data: SanitizedAdminRoleWithUsersCount[];
        error?: errors.ApplicationError | errors.ValidationError;
    }
}
export {};
